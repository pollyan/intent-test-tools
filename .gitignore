# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
# dist/ - Removed to allow committing proxy packages
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# static files generated from Django application using `collectstatic`
media
# Note: Keep Flask static files (web_gui/static/) in git for deployment

# Midscene.js dump files
midscene_run/dump
midscene_run/report/
midscene_run/tmp
midscene_run/log
midscene_run/cache/

# Node.js dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
package-lock.json

# IDE files
.idea/
.vscode/
*.swp
*.swo

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Test results and screenshots
test_results/
screenshots/

# === 新增清理规则 ===

# Process ID files
*.pid

# Application logs (增强日志规则)
*.log
web_gui/*.log
startup.log
midscene_server.log
web_server.log
new_flask.log
flask.log

# Local development databases
local_test.db
*.db
!web_gui/instance/.gitkeep

# Web bundles (无关项目内容)
web-bundles/

# POC and demo files pattern
poc_*.py
demo_*.py
*_poc.py
*_demo.py
poc_*.json
demo_*.json

# Test temporary files
test_*.json
test_report_generation.js

# Runtime directories
midscene_run/
tmp/
temp/

# Development scripts pattern (可选)
quick_start.py
start_local_dev.py
test_local.py
test_server_status.py

# Integration examples
integration_example.py
*_example.py

# Backup files
*.bak
*.backup
*.old

# Archive files
*.zip.backup
*.tar.backup

# 注意：保留开发工具目录
# .bmad-core/ - 保留BMad工具配置
# .claude/ - 保留Claude工具配置
